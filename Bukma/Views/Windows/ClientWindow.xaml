<Window x:Class="Bukma.Views.Windows.ClientWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Bukma.Views.Windows" xmlns:controls="clr-namespace:Bukma.Controls"
        xmlns:conv="clr-namespace:Bukma.Converters" 
        xmlns:helpers="clr-namespace:Bukma.Helpers" xmlns:fa="http://schemas.fontawesome.io/icons/" 
        xmlns:enums="clr-namespace:Models.Enums;assembly=Models"
        mc:Ignorable="d"
        Title="" WindowStartupLocation="CenterOwner" Height="600" Width="1000">
  <Grid Background="{StaticResource HighlightBrush}">
    <Grid.Resources>
      <helpers:BindingProxy x:Key="proxy" Data="{Binding}"/>
      <Style x:Key="SaveAndCancelStyle" TargetType="{x:Type controls:ThreeStateButton}">
        <Setter Property="Visibility" Value="Collapsed"/>
        <Style.Triggers>
          <MultiDataTrigger>
            <MultiDataTrigger.Conditions>
              <Condition Binding="{Binding Data.CreatingType, Source={StaticResource proxy},UpdateSourceTrigger=PropertyChanged, Converter={conv:IsEqualConverter},ConverterParameter={x:Static enums:CreatingType.None}}" Value="false" />
              <Condition Binding="{Binding Data.CreatingType, Source={StaticResource proxy},UpdateSourceTrigger=PropertyChanged, Converter={conv:IsEqualConverter},ConverterParameter={x:Static enums:CreatingType.ViewItem}}" Value="false" />
            </MultiDataTrigger.Conditions>
            <Setter Property="Visibility" Value="Visible"/>
          </MultiDataTrigger>
        </Style.Triggers>
      </Style>
      <Style x:Key="AddAndViewStyle" TargetType="{x:Type controls:ThreeStateButton}">
        <Setter Property="Visibility" Value="Collapsed"/>
        <Style.Triggers>
          <MultiDataTrigger>
            <MultiDataTrigger.Conditions>
              <Condition Binding="{Binding Data.CreatingType, Source={StaticResource proxy},UpdateSourceTrigger=PropertyChanged, Converter={conv:IsEqualConverter},ConverterParameter={x:Static enums:CreatingType.EditItem}}" Value="false" />
              <Condition Binding="{Binding Data.CreatingType, Source={StaticResource proxy},UpdateSourceTrigger=PropertyChanged, Converter={conv:IsEqualConverter},ConverterParameter={x:Static enums:CreatingType.CreateNewItem}}" Value="false" />
            </MultiDataTrigger.Conditions>
            <Setter Property="Visibility" Value="Visible"/>
          </MultiDataTrigger>
        </Style.Triggers>
      </Style>
      <Style x:Key="EditStyle" TargetType="{x:Type controls:ThreeStateButton}">
        <Setter Property="Visibility" Value="Collapsed"/>
        <Style.Triggers>
          <DataTrigger Binding="{Binding Data.CreatingType, Source={StaticResource proxy},UpdateSourceTrigger=PropertyChanged, Converter={conv:IsEqualConverter},ConverterParameter={x:Static enums:CreatingType.ViewItem}}" Value="true">
            <Setter Property="Visibility" Value="Visible"/>
          </DataTrigger>
        </Style.Triggers>
      </Style>
    </Grid.Resources>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="4*"/>
      <ColumnDefinition Width="16*"/>
    </Grid.ColumnDefinitions>
    <Border Background="White" BorderBrush="{StaticResource HighlightBrush}" BorderThickness="1">
      <Grid>
        <Grid.RowDefinitions>
          <RowDefinition Height="*"/>
          <RowDefinition Height="12*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="auto"/>
          <ColumnDefinition Width="auto"/>
          <ColumnDefinition Width="auto"/>
          <ColumnDefinition Width="auto"/>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition Width="auto"/>
        </Grid.ColumnDefinitions>

        <controls:ThreeStateButton Grid.Column="0" VerticalAlignment="Top" 
           Icon="pack://application:,,,/Resources/plus_32_3E4973.png"
           IconOver="pack://application:,,,/Resources/plus_32_FFFFFF.png"   
           IconPress="pack://application:,,,/Resources/plus_32_94F6FF.png"
           Command="{Binding AddNewItemCommand}" Style="{StaticResource AddAndViewStyle}"
          />
        <controls:ThreeStateButton Grid.Column="1" VerticalAlignment="Top" 
           Icon="pack://application:,,,/Resources/edit_32_3E4973.png"
           IconOver="pack://application:,,,/Resources/edit_32_FFFFFF.png"   
           IconPress="pack://application:,,,/Resources/plus_32_94F6FF.png"
           Command="{Binding EditCommand}" Style="{StaticResource EditStyle}"
          />
        <controls:ThreeStateButton Grid.Column="2" VerticalAlignment="Top" 
           Icon="pack://application:,,,/Resources/save_32_3E4973.png"
           IconOver="pack://application:,,,/Resources/save_32_FFFFFF.png"   
           IconPress="pack://application:,,,/Resources/plus_32_94F6FF.png"
             Command="{Binding SaveCommand}" Style="{StaticResource SaveAndCancelStyle}"
          />
        <controls:ThreeStateButton Grid.Column="3" VerticalAlignment="Top" 
           Icon="pack://application:,,,/Resources/cancel_32_3E4973.png"
           IconOver="pack://application:,,,/Resources/cancel_32_FFFFFF.png"   
           IconPress="pack://application:,,,/Resources/plus_32_94F6FF.png"
           Style="{StaticResource SaveAndCancelStyle}"  Command="{Binding CancelCommand}"
          />
        <controls:ThreeStateButton Grid.Column="5" VerticalAlignment="Top" 
           Icon="pack://application:,,,/Resources/search_32_E4973.png"
           IconOver="pack://application:,,,/Resources/search_32_FFFFFF.png"   
           IconPress="pack://application:,,,/Resources/plus_32_94F6FF.png"
           Command="{Binding FilterCommand}" Visibility="{Binding Filter.IsSetUp,UpdateSourceTrigger=PropertyChanged,Converter={conv:BooleanToVisiblityCoverter VisbilityValue=False}}"
          />
        <controls:ThreeStateButton Grid.Column="5" VerticalAlignment="Top" 
           Icon="pack://application:,,,/Resources/cancel_search_32_3E4973.png"
           IconOver="pack://application:,,,/Resources/cancel_search_32_FFFFFF.png"   
           IconPress="pack://application:,,,/Resources/plus_32_94F6FF.png"
           Command="{Binding FilterCommand}" Visibility="{Binding Filter.IsSetUp,UpdateSourceTrigger=PropertyChanged,Converter={conv:BooleanToVisiblityCoverter }}"
          />

        <Grid Grid.Row="1" Grid.ColumnSpan="5" >
          <Grid.RowDefinitions>
          <RowDefinition Height="auto"/>
          <RowDefinition Height="*"/>
          <RowDefinition Height="auto"/>
          </Grid.RowDefinitions>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="10"/>
            <ColumnDefinition Width="*"/>
          </Grid.ColumnDefinitions>
          <Grid Grid.ColumnSpan="3" DataContext="{Binding EditItem,UpdateSourceTrigger=PropertyChanged}">
            <Grid.Style>
              <Style TargetType="{x:Type Grid}">
                <Setter Property="IsEnabled" Value="False" />
                <Setter Property="Opacity" Value="0.5" />
                <Style.Triggers>
                  <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                      <Condition Binding="{Binding Data.CreatingType, Source={StaticResource proxy},UpdateSourceTrigger=PropertyChanged, Converter={conv:IsEqualConverter},ConverterParameter={x:Static enums:CreatingType.None}}" Value="false" />
                      <Condition Binding="{Binding Data.CreatingType, Source={StaticResource proxy},UpdateSourceTrigger=PropertyChanged, Converter={conv:IsEqualConverter},ConverterParameter={x:Static enums:CreatingType.ViewItem}}" Value="false" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="IsEnabled" Value="True" />
                    <Setter Property="Opacity" Value="1" />
                  </MultiDataTrigger>
                  <DataTrigger Binding="{Binding Data.CreatingType, Source={StaticResource proxy},UpdateSourceTrigger=PropertyChanged, Converter={conv:IsEqualConverter},ConverterParameter={x:Static enums:CreatingType.ViewItem}}" Value="true">
                    <Setter Property="Opacity" Value="0.8"/>
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </Grid.Style>
            <Grid.RowDefinitions>
              <RowDefinition Height="auto"/>
              <RowDefinition Height="auto"/>
              <RowDefinition Height="auto"/>
              <RowDefinition Height="auto"/>
              <RowDefinition Height="auto"/>
              <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="10"/>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="30"/>
            </Grid.ColumnDefinitions>
            <GroupBox Grid.Column="1" Header="Imie">
              <GroupBox.Style>
                <Style TargetType="{x:Type GroupBox}">
                  <Setter Property="Foreground" Value="Black"/>
                  <Setter Property="FontWeight" Value="Normal"/>
                  <Style.Triggers>
                    <DataTrigger Binding="{Binding Name,UpdateSourceTrigger=PropertyChanged,Converter={conv:IsNullOrEmptyBooleanConverter}}" Value="false">
                      <Setter Property="Foreground" Value="Red"/>
                      <Setter Property="FontWeight" Value="Bold"/>
                    </DataTrigger>
                  </Style.Triggers>
                </Style>
              </GroupBox.Style>
              <TextBox Text="{Binding Name,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"/>
            </GroupBox>
            <GroupBox Grid.Column="1"  Grid.Row="1" Header="Nazwisko">
              <GroupBox.Style>
                <Style TargetType="{x:Type GroupBox}">
                  <Setter Property="Foreground" Value="Black"/>
                  <Setter Property="FontWeight" Value="Normal"/>
                  <Style.Triggers>
                    <DataTrigger Binding="{Binding Surname,UpdateSourceTrigger=PropertyChanged,Converter={conv:IsNullOrEmptyBooleanConverter}}" Value="false">
                      <Setter Property="Foreground" Value="Red"/>
                      <Setter Property="FontWeight" Value="Bold"/>
                    </DataTrigger>
                  </Style.Triggers>
                </Style>
              </GroupBox.Style>
              <TextBox Text="{Binding Surname,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"/>
            </GroupBox>
            <GroupBox Grid.Column="1"  Grid.Row="2" Header="Miasto">
              <TextBox Text="{Binding City,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"/>
            </GroupBox>
            <GroupBox Grid.Column="1"  Grid.Row="3" Header="Kod pocztowy">
              <TextBox Text="{Binding PostCode,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"/>
            </GroupBox>
            <GroupBox Grid.Column="1"  Grid.Row="4" Header="Numer domu">
              <TextBox Text="{Binding HouseNumber,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"/>
            </GroupBox>
            <fa:ImageAwesome Grid.Column="1" Visibility="{Binding Data.IsLoading, Source={StaticResource proxy},UpdateSourceTrigger=PropertyChanged,Converter={conv:BooleanToVisiblityCoverter}}"  Grid.Row="5" Icon="Refresh" Spin="True" Height="108" Width="48" HorizontalAlignment="Center" />
          </Grid>
          <Button Grid.Column="1" Grid.Row="2" Margin="0,0,0,10" Content="Wybierz" VerticalAlignment="Bottom" 
                  Background="{StaticResource AssistantBrush}" BorderBrush="{StaticResource MainBrush}"
                  BorderThickness="1" 
                  Command="{Binding ChooseCommand}"
                  Visibility="{Binding Data.CreatingType, Source={StaticResource proxy},UpdateSourceTrigger=PropertyChanged, Converter={conv:IsEqualToVisibilityConverter},ConverterParameter={x:Static enums:CreatingType.ViewItem}}"/>
        </Grid>
      </Grid>
    </Border>
    <ListView Grid.Column="1" ItemsSource="{Binding Items}" Background="#99FFFFFF">
      <ListView.ItemContainerStyle>
        <Style TargetType="ListViewItem">
          <EventSetter Event="PreviewMouseLeftButtonDown" Handler="ListViewItem_PreviewMouseLeftButtonDown" />
          <Setter Property="BorderBrush" Value="{StaticResource MainBrush}" />
          <Setter Property="BorderThickness" Value="1,0,1,1" />
          <Setter Property="FontSize" Value="12"/>
          <Setter Property="Margin" Value="0,0,0,-1"/>
        </Style>
      </ListView.ItemContainerStyle>
      <ListView.View>
        <GridView>
          <GridViewColumn Header="Imie" Width="150" DisplayMemberBinding="{Binding Name}" />
          <GridViewColumn Header="Nazwisko" Width="150" DisplayMemberBinding="{Binding Surname}" />
          <GridViewColumn Header="Miasto" Width="150" DisplayMemberBinding="{Binding City}" />
          <GridViewColumn Header="Kod pocztowy" Width="150" DisplayMemberBinding="{Binding PostCode}" />
          <GridViewColumn Header="Nr mieszkania/domu" Width="190" DisplayMemberBinding="{Binding HouseNumber}" />
        </GridView>
      </ListView.View>
    </ListView>
  </Grid>
</Window>

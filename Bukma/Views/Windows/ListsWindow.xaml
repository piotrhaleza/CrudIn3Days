<Window x:Class="Bukma.Views.Windows.ListsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Bukma.Views.Windows"
        xmlns:helpers="clr-namespace:Bukma.Helpers" 
        xmlns:controls="clr-namespace:Bukma.Controls" 
        xmlns:fa="http://schemas.fontawesome.io/icons/" xmlns:conv="clr-namespace:Bukma.Converters"
        xmlns:enums="clr-namespace:Models.Enums;assembly=Models"
        mc:Ignorable="d"
        Title="" Height="450" Width="800">
  <TabControl>
    <TabItem Header="Listy" >
      <Grid Background="{StaticResource HighlightBrush}">
        <Grid.Resources>
          <helpers:BindingProxy x:Key="proxy" Data="{Binding}"/>
          <Style x:Key="SaveAndCancelStyle" TargetType="{x:Type controls:ThreeStateButton}">
            <Setter Property="Visibility" Value="Collapsed"/>
            <Style.Triggers>
              <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                  <Condition Binding="{Binding Data.CreatingType, Source={StaticResource proxy},UpdateSourceTrigger=PropertyChanged, Converter={conv:IsEqualConverter},ConverterParameter={x:Static enums:CreatingType.None}}" Value="false" />
                  <Condition Binding="{Binding Data.CreatingType, Source={StaticResource proxy},UpdateSourceTrigger=PropertyChanged, Converter={conv:IsEqualConverter},ConverterParameter={x:Static enums:CreatingType.ViewItem}}" Value="false" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Visibility" Value="Visible"/>
              </MultiDataTrigger>
            </Style.Triggers>
          </Style>
          <Style x:Key="AddAndViewStyle" TargetType="{x:Type controls:ThreeStateButton}">
            <Setter Property="Visibility" Value="Collapsed"/>
            <Style.Triggers>
              <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                  <Condition Binding="{Binding Data.CreatingType, Source={StaticResource proxy},UpdateSourceTrigger=PropertyChanged, Converter={conv:IsEqualConverter},ConverterParameter={x:Static enums:CreatingType.EditItem}}" Value="false" />
                  <Condition Binding="{Binding Data.CreatingType, Source={StaticResource proxy},UpdateSourceTrigger=PropertyChanged, Converter={conv:IsEqualConverter},ConverterParameter={x:Static enums:CreatingType.CreateNewItem}}" Value="false" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Visibility" Value="Visible"/>
              </MultiDataTrigger>
            </Style.Triggers>
          </Style>
          <Style x:Key="EditStyle" TargetType="{x:Type controls:ThreeStateButton}">
            <Setter Property="Visibility" Value="Collapsed"/>
            <Style.Triggers>
              <DataTrigger Binding="{Binding Data.CreatingType, Source={StaticResource proxy},UpdateSourceTrigger=PropertyChanged, Converter={conv:IsEqualConverter},ConverterParameter={x:Static enums:CreatingType.ViewItem}}" Value="true">
                <Setter Property="Visibility" Value="Visible"/>
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </Grid.Resources>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="4*"/>
          <ColumnDefinition Width="13*"/>
        </Grid.ColumnDefinitions>
        <Border Background="White" BorderBrush="{StaticResource HighlightBrush}" BorderThickness="1">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
              <RowDefinition Height="12*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="auto"/>
              <ColumnDefinition Width="auto"/>
              <ColumnDefinition Width="auto"/>
              <ColumnDefinition Width="auto"/>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>

            <controls:ThreeStateButton Grid.Column="0" VerticalAlignment="Top" 
           Icon="pack://application:,,,/Resources/plus_32_3E4973.png"
           IconOver="pack://application:,,,/Resources/plus_32_FFFFFF.png"   
           IconPress="pack://application:,,,/Resources/plus_32_94F6FF.png"
           Command="{Binding AddNewItemCommand}" Style="{StaticResource AddAndViewStyle}"
          />
            <controls:ThreeStateButton Grid.Column="1" VerticalAlignment="Top" 
           Icon="pack://application:,,,/Resources/edit_32_3E4973.png"
           IconOver="pack://application:,,,/Resources/edit_32_FFFFFF.png"   
           IconPress="pack://application:,,,/Resources/plus_32_94F6FF.png"
           Command="{Binding EditCommand}" Style="{StaticResource EditStyle}"
          />
            <controls:ThreeStateButton Grid.Column="2" VerticalAlignment="Top" 
           Icon="pack://application:,,,/Resources/save_32_3E4973.png"
           IconOver="pack://application:,,,/Resources/save_32_FFFFFF.png"   
           IconPress="pack://application:,,,/Resources/plus_32_94F6FF.png"
             Command="{Binding SaveCommand}" Style="{StaticResource SaveAndCancelStyle}"
          />
            <controls:ThreeStateButton Grid.Column="3" VerticalAlignment="Top" 
           Icon="pack://application:,,,/Resources/cancel_32_3E4973.png"
           IconOver="pack://application:,,,/Resources/cancel_32_FFFFFF.png"   
           IconPress="pack://application:,,,/Resources/plus_32_94F6FF.png"
           Style="{StaticResource SaveAndCancelStyle}"  Command="{Binding CancelCommand}"
          />
            <controls:ThreeStateButton Grid.Column="5" VerticalAlignment="Top" 
           Icon="pack://application:,,,/Resources/search_32_E4973.png"
           IconOver="pack://application:,,,/Resources/search_32_FFFFFF.png"   
           IconPress="pack://application:,,,/Resources/plus_32_94F6FF.png"
           Command="{Binding FilterCommand}" Visibility="{Binding Filter.IsSetUp,UpdateSourceTrigger=PropertyChanged,Converter={conv:BooleanToVisiblityCoverter VisbilityValue=False}}"
          />
            <controls:ThreeStateButton Grid.Column="5" VerticalAlignment="Top" 
           Icon="pack://application:,,,/Resources/cancel_search_32_3E4973.png"
           IconOver="pack://application:,,,/Resources/cancel_search_32_FFFFFF.png"   
           IconPress="pack://application:,,,/Resources/plus_32_94F6FF.png"
           Command="{Binding FilterCommand}" Visibility="{Binding Filter.IsSetUp,UpdateSourceTrigger=PropertyChanged,Converter={conv:BooleanToVisiblityCoverter }}"
          />

            <Grid Grid.Row="1" Grid.ColumnSpan="5" >
              <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="auto"/>
              </Grid.RowDefinitions>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Grid Grid.ColumnSpan="3" DataContext="{Binding EditItem,UpdateSourceTrigger=PropertyChanged}">
                <Grid.Style>
                  <Style TargetType="{x:Type Grid}">
                    <Setter Property="IsEnabled" Value="False" />
                    <Setter Property="Opacity" Value="0.5" />
                    <Style.Triggers>
                      <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                          <Condition Binding="{Binding Data.CreatingType, Source={StaticResource proxy},UpdateSourceTrigger=PropertyChanged, Converter={conv:IsEqualConverter},ConverterParameter={x:Static enums:CreatingType.None}}" Value="false" />
                          <Condition Binding="{Binding Data.CreatingType, Source={StaticResource proxy},UpdateSourceTrigger=PropertyChanged, Converter={conv:IsEqualConverter},ConverterParameter={x:Static enums:CreatingType.ViewItem}}" Value="false" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="IsEnabled" Value="True" />
                        <Setter Property="Opacity" Value="1" />
                      </MultiDataTrigger>
                      <DataTrigger Binding="{Binding Data.CreatingType, Source={StaticResource proxy},UpdateSourceTrigger=PropertyChanged, Converter={conv:IsEqualConverter},ConverterParameter={x:Static enums:CreatingType.ViewItem}}" Value="true">
                        <Setter Property="Opacity" Value="0.8"/>
                      </DataTrigger>
                    </Style.Triggers>
                  </Style>
                </Grid.Style>
                <Grid.RowDefinitions>
                  <RowDefinition Height="auto"/>
                  <RowDefinition Height="auto"/>
                  <RowDefinition Height="auto"/>
                  <RowDefinition Height="auto"/>
                  <RowDefinition Height="auto"/>
                  <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="10"/>
                  <ColumnDefinition Width="*"/>
                  <ColumnDefinition Width="30"/>
                </Grid.ColumnDefinitions>
                <GroupBox Grid.Column="1" Header="Imie">
                  <GroupBox.Style>
                    <Style TargetType="{x:Type GroupBox}">
                      <Setter Property="Foreground" Value="Black"/>
                      <Setter Property="FontWeight" Value="Normal"/>
                      <Style.Triggers>
                        <DataTrigger Binding="{Binding Name,UpdateSourceTrigger=PropertyChanged,Converter={conv:IsNullOrEmptyBooleanConverter}}" Value="false">
                          <Setter Property="Foreground" Value="Red"/>
                          <Setter Property="FontWeight" Value="Bold"/>
                        </DataTrigger>
                      </Style.Triggers>
                    </Style>
                  </GroupBox.Style>
                  <TextBox Text="{Binding Name,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"/>
                </GroupBox>
                <GroupBox Grid.Column="1"  Grid.Row="2" Header="Artykuł">
                  <GroupBox.Style>
                    <Style TargetType="{x:Type GroupBox}">
                      <Setter Property="Foreground" Value="Black"/>
                      <Setter Property="FontWeight" Value="Normal"/>
                      <Style.Triggers>
                        <DataTrigger Binding="{Binding ArticleId,UpdateSourceTrigger=PropertyChanged,Converter={conv:IsNullOrEmptyBooleanConverter}}" Value="false">
                          <Setter Property="Foreground" Value="Red"/>
                          <Setter Property="FontWeight" Value="Bold"/>
                        </DataTrigger>
                      </Style.Triggers>
                    </Style>
                  </GroupBox.Style>
                  <ComboBox DisplayMemberPath="Name" MaxDropDownHeight="100" SelectedValuePath="Id" ItemsSource="{Binding Data.ArticleForSelection,Source={StaticResource proxy}, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" SelectedValue="{Binding Data.ArticleId,Source={StaticResource proxy}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                </GroupBox>
                <GroupBox Grid.Column="1"  Grid.Row="3" Header="Ilość">
                  <GroupBox.Style>
                    <Style TargetType="{x:Type GroupBox}">
                      <Setter Property="Foreground" Value="Black"/>
                      <Setter Property="FontWeight" Value="Normal"/>
                      <Style.Triggers>
                        <DataTrigger Binding="{Binding Amount,UpdateSourceTrigger=PropertyChanged,Converter={conv:IsNullOrEmptyBooleanConverter}}" Value="false">
                          <Setter Property="Foreground" Value="Red"/>
                          <Setter Property="FontWeight" Value="Bold"/>
                        </DataTrigger>
                      </Style.Triggers>
                    </Style>
                  </GroupBox.Style>
                  <TextBox  PreviewTextInput="NumberValidationTextBox" Text="{Binding Amount,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"/>
                </GroupBox>
                <GroupBox Grid.Column="1"  Grid.Row="4" Header="Netto">
                  <Label Content="{Binding ValueNetto,UpdateSourceTrigger=PropertyChanged}"/>
                </GroupBox>
                <GroupBox Grid.Column="1"  Grid.Row="5" Header="Vrutto">
                  <Label Content="{Binding ValueBrutto,UpdateSourceTrigger=PropertyChanged}"/>
                </GroupBox>
                <fa:ImageAwesome Grid.Column="1" Visibility="{Binding Data.IsLoading, Source={StaticResource proxy},UpdateSourceTrigger=PropertyChanged,Converter={conv:BooleanToVisiblityCoverter}}"  Grid.Row="5" Icon="Refresh" Spin="True" Height="108" Width="48" HorizontalAlignment="Center" />
              </Grid>
              </Grid>
          </Grid>
        </Border>
        <ListView Grid.Column="1" ItemsSource="{Binding Items}" Background="#99FFFFFF">
          <ListView.ItemContainerStyle>
            <Style TargetType="ListViewItem">
              <EventSetter Event="PreviewMouseLeftButtonDown" Handler="ListViewItem_PreviewMouseLeftButtonDownOrderArticles" />
              <Setter Property="BorderBrush" Value="{StaticResource MainBrush}" />
              <Setter Property="BorderThickness" Value="1,0,1,1" />
              <Setter Property="FontSize" Value="12"/>
              <Setter Property="Margin" Value="0,0,0,-1"/>
            </Style>
          </ListView.ItemContainerStyle>
          <ListView.View>
            <GridView>
              <GridViewColumn Header="Nazwa listy" Width="110" DisplayMemberBinding="{Binding Name}" />
              <GridViewColumn Header="Artykuł" Width="110" DisplayMemberBinding="{Binding ArticleName}" />
              <GridViewColumn Header="Ilość" Width="110" DisplayMemberBinding="{Binding Amount}" />
              <GridViewColumn Header="Netto" Width="110" DisplayMemberBinding="{Binding ValueNetto}" />
              <GridViewColumn Header="Brutto" Width="110" DisplayMemberBinding="{Binding ValueBrutto}" />
            </GridView>
          </ListView.View>
        </ListView>
      </Grid>
    </TabItem>
    <TabItem Header="Atrykuły"  DataContext="{Binding Child}">
      <Grid Background="{StaticResource HighlightBrush}" >
        <Grid.Resources>
          <helpers:BindingProxy x:Key="proxy" Data="{Binding}"/>
          <Style x:Key="SaveAndCancelStyle" TargetType="{x:Type controls:ThreeStateButton}">
            <Setter Property="Visibility" Value="Collapsed"/>
            <Style.Triggers>
              <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                  <Condition Binding="{Binding Data.CreatingType, Source={StaticResource proxy},UpdateSourceTrigger=PropertyChanged, Converter={conv:IsEqualConverter},ConverterParameter={x:Static enums:CreatingType.None}}" Value="false" />
                  <Condition Binding="{Binding Data.CreatingType, Source={StaticResource proxy},UpdateSourceTrigger=PropertyChanged, Converter={conv:IsEqualConverter},ConverterParameter={x:Static enums:CreatingType.ViewItem}}" Value="false" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Visibility" Value="Visible"/>
              </MultiDataTrigger>
            </Style.Triggers>
          </Style>
          <Style x:Key="AddAndViewStyle" TargetType="{x:Type controls:ThreeStateButton}">
            <Setter Property="Visibility" Value="Collapsed"/>
            <Style.Triggers>
              <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                  <Condition Binding="{Binding Data.CreatingType, Source={StaticResource proxy},UpdateSourceTrigger=PropertyChanged, Converter={conv:IsEqualConverter},ConverterParameter={x:Static enums:CreatingType.EditItem}}" Value="false" />
                  <Condition Binding="{Binding Data.CreatingType, Source={StaticResource proxy},UpdateSourceTrigger=PropertyChanged, Converter={conv:IsEqualConverter},ConverterParameter={x:Static enums:CreatingType.CreateNewItem}}" Value="false" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Visibility" Value="Visible"/>
              </MultiDataTrigger>
            </Style.Triggers>
          </Style>
          <Style x:Key="EditStyle" TargetType="{x:Type controls:ThreeStateButton}">
            <Setter Property="Visibility" Value="Collapsed"/>
            <Style.Triggers>
              <DataTrigger Binding="{Binding Data.CreatingType, Source={StaticResource proxy},UpdateSourceTrigger=PropertyChanged, Converter={conv:IsEqualConverter},ConverterParameter={x:Static enums:CreatingType.ViewItem}}" Value="true">
                <Setter Property="Visibility" Value="Visible"/>
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </Grid.Resources>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="4*"/>
          <ColumnDefinition Width="13*"/>
        </Grid.ColumnDefinitions>
        <Border Background="White" BorderBrush="{StaticResource HighlightBrush}" BorderThickness="1">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
              <RowDefinition Height="12*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="auto"/>
              <ColumnDefinition Width="auto"/>
              <ColumnDefinition Width="auto"/>
              <ColumnDefinition Width="auto"/>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>

            <controls:ThreeStateButton Grid.Column="0" VerticalAlignment="Top" 
           Icon="pack://application:,,,/Resources/plus_32_3E4973.png"
           IconOver="pack://application:,,,/Resources/plus_32_FFFFFF.png"   
           IconPress="pack://application:,,,/Resources/plus_32_94F6FF.png"
           Command="{Binding AddNewItemCommand}" Style="{StaticResource AddAndViewStyle}"
          />
            <controls:ThreeStateButton Grid.Column="1" VerticalAlignment="Top" 
           Icon="pack://application:,,,/Resources/edit_32_3E4973.png"
           IconOver="pack://application:,,,/Resources/edit_32_FFFFFF.png"   
           IconPress="pack://application:,,,/Resources/plus_32_94F6FF.png"
           Command="{Binding EditCommand}" Style="{StaticResource EditStyle}"
          />
            <controls:ThreeStateButton Grid.Column="2" VerticalAlignment="Top" 
           Icon="pack://application:,,,/Resources/save_32_3E4973.png"
           IconOver="pack://application:,,,/Resources/save_32_FFFFFF.png"   
           IconPress="pack://application:,,,/Resources/plus_32_94F6FF.png"
             Command="{Binding SaveCommand}" Style="{StaticResource SaveAndCancelStyle}"
          />
            <controls:ThreeStateButton Grid.Column="3" VerticalAlignment="Top" 
           Icon="pack://application:,,,/Resources/cancel_32_3E4973.png"
           IconOver="pack://application:,,,/Resources/cancel_32_FFFFFF.png"   
           IconPress="pack://application:,,,/Resources/plus_32_94F6FF.png"
           Style="{StaticResource SaveAndCancelStyle}"  Command="{Binding CancelCommand}"
          />
            <controls:ThreeStateButton Grid.Column="5" VerticalAlignment="Top" 
           Icon="pack://application:,,,/Resources/search_32_E4973.png"
           IconOver="pack://application:,,,/Resources/search_32_FFFFFF.png"   
           IconPress="pack://application:,,,/Resources/plus_32_94F6FF.png"
           Command="{Binding FilterCommand}" Visibility="{Binding Filter.IsSetUp,UpdateSourceTrigger=PropertyChanged,Converter={conv:BooleanToVisiblityCoverter VisbilityValue=False}}"
          />
            <controls:ThreeStateButton Grid.Column="5" VerticalAlignment="Top" 
           Icon="pack://application:,,,/Resources/cancel_search_32_3E4973.png"
           IconOver="pack://application:,,,/Resources/cancel_search_32_FFFFFF.png"   
           IconPress="pack://application:,,,/Resources/plus_32_94F6FF.png"
           Command="{Binding FilterCommand}" Visibility="{Binding Filter.IsSetUp,UpdateSourceTrigger=PropertyChanged,Converter={conv:BooleanToVisiblityCoverter }}"
          />
            <Grid Grid.Row="1" Grid.ColumnSpan="5" >
              <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="auto"/>
              </Grid.RowDefinitions>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Grid Grid.ColumnSpan="3" DataContext="{Binding EditItem,UpdateSourceTrigger=PropertyChanged}">
                <Grid.Style>
                  <Style TargetType="{x:Type Grid}">
                    <Setter Property="IsEnabled" Value="False" />
                    <Setter Property="Opacity" Value="0.5" />
                    <Style.Triggers>
                      <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                          <Condition Binding="{Binding Data.CreatingType, Source={StaticResource proxy},UpdateSourceTrigger=PropertyChanged, Converter={conv:IsEqualConverter},ConverterParameter={x:Static enums:CreatingType.None}}" Value="false" />
                          <Condition Binding="{Binding Data.CreatingType, Source={StaticResource proxy},UpdateSourceTrigger=PropertyChanged, Converter={conv:IsEqualConverter},ConverterParameter={x:Static enums:CreatingType.ViewItem}}" Value="false" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="IsEnabled" Value="True" />
                        <Setter Property="Opacity" Value="1" />
                      </MultiDataTrigger>
                      <DataTrigger Binding="{Binding Data.CreatingType, Source={StaticResource proxy},UpdateSourceTrigger=PropertyChanged, Converter={conv:IsEqualConverter},ConverterParameter={x:Static enums:CreatingType.ViewItem}}" Value="true">
                        <Setter Property="Opacity" Value="0.8"/>
                      </DataTrigger>
                    </Style.Triggers>
                  </Style>
                </Grid.Style>
                <Grid.RowDefinitions>
                  <RowDefinition Height="auto"/>
                  <RowDefinition Height="auto"/>
                  <RowDefinition Height="auto"/>
                  <RowDefinition Height="auto"/>
                  <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="10"/>
                  <ColumnDefinition Width="*"/>
                  <ColumnDefinition Width="30"/>
                </Grid.ColumnDefinitions>
                <GroupBox Grid.Column="1" Header="Imie">
                  <GroupBox.Style>
                    <Style TargetType="{x:Type GroupBox}">
                      <Setter Property="Foreground" Value="Black"/>
                      <Setter Property="FontWeight" Value="Normal"/>
                      <Style.Triggers>
                        <DataTrigger Binding="{Binding Name,UpdateSourceTrigger=PropertyChanged,Converter={conv:IsNullOrEmptyBooleanConverter}}" Value="false">
                          <Setter Property="Foreground" Value="Red"/>
                          <Setter Property="FontWeight" Value="Bold"/>
                        </DataTrigger>
                      </Style.Triggers>
                    </Style>
                  </GroupBox.Style>
                  <TextBox Text="{Binding Name,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"/>
                </GroupBox>
                <GroupBox Grid.Column="1"  Grid.Row="1" Header="Cenna netto">
                  <TextBox PreviewTextInput="NumberValidationTextBox" Text="{Binding NettoValue,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"/>
                </GroupBox>
                <GroupBox Grid.Column="1"  Grid.Row="2" Header="Vat (%)">
                  <TextBox PreviewTextInput="NumberValidationTextBox" Text="{Binding VatTax,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"/>
                </GroupBox>
                <GroupBox Grid.Column="1"  Grid.Row="3" Header="Cena Brutto">
                  <Label Content="{Binding BruttoValue,UpdateSourceTrigger=PropertyChanged,Mode=OneWay}"/>
                </GroupBox>
                <fa:ImageAwesome Grid.Column="1" Visibility="{Binding Data.IsLoading, Source={StaticResource proxy},UpdateSourceTrigger=PropertyChanged,Converter={conv:BooleanToVisiblityCoverter}}"  Grid.Row="5" Icon="Refresh" Spin="True" Height="108" Width="48" HorizontalAlignment="Center" />
              </Grid>
               </Grid>
          </Grid>
        </Border>
        <ListView Grid.Column="1" ItemsSource="{Binding Items}" Background="#99FFFFFF">
          <ListView.ItemContainerStyle>
            <Style TargetType="ListViewItem">
              <EventSetter Event="PreviewMouseLeftButtonDown" Handler="ListViewItem_PreviewMouseLeftButtonDownArticles" />
              <Setter Property="BorderBrush" Value="{StaticResource MainBrush}" />
              <Setter Property="BorderThickness" Value="1,0,1,1" />
              <Setter Property="FontSize" Value="12"/>
              <Setter Property="Margin" Value="0,0,0,-1"/>
            </Style>
          </ListView.ItemContainerStyle>
          <ListView.View>
            <GridView>
              <GridViewColumn Header="Nazwa" Width="150" DisplayMemberBinding="{Binding Name}" />
              <GridViewColumn Header="Cenna Netto" Width="150" DisplayMemberBinding="{Binding NettoValue}" />
              <GridViewColumn Header="Podatek Vat" Width="150" DisplayMemberBinding="{Binding DisplayVatTax}" />
              <GridViewColumn Header="Cenna Brutto" Width="150" DisplayMemberBinding="{Binding BruttoValue}" />
            </GridView>
          </ListView.View>
        </ListView>
      </Grid>
    </TabItem>
  </TabControl>
</Window>
